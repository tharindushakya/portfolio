%!PS-Adobe-3.0 EPSF-3.0
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.10.1 (Build 14B25) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 375 74
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
{ld}repeat pop
/SC{	
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		
/cm {cmmtx astore CM concat}bd	
/W{clip newpath}bd
/W*{eoclip newpath}bd
statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	
    true
}{
    pop	
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse
{	
    { 
	{ 
	    pop pop 
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd
/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd
/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd
/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	
dict begin
{def} repeat
pop		
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	
}bd
/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ 
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ 
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		
/cp_proc/x_proc ld 	
/base_charpath		
{
    /t_array xs
    /t_i 0 def
    { 
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ 
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ 
findfont dup length dict copy definefont pop
}bd
L3? dup dup{save exch}if
/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def
/setupFunEval 
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   
		    
	[ 
	    0 1 nRange 1 sub
	    { 
		    2 mul/nDim2 xd		
		    Range nDim2 get		
		    Range nDim2 1 add get	
		    1 index sub			
						
		    255 div			
		    exch			
	    }for
	]store
    end
}bd
/FunEval 
{
    begin
	
	nRange mul /val xd	
				
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd 
	    val	
	    add DataSource exch get 
	    mulRange nDim2 get mul 	
	    mulRange nDim2 1 add get 
	    add 
	}for	
    end
}bd
/max 
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd
/sh2
{	
	/Coords load aload pop 	
	3 index 3 index translate	
					
	3 -1 roll sub	
	3 1 roll exch 	
	sub				
	2 copy
	dup mul exch dup mul add sqrt	
	dup
	scale  
	atan	
	
	rotate		
	
	/Function load setupFunEval	
	
	
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	
	grestore	
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd
/shp	
{	
	4 copy
	
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
	
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd
/calcmaxs
{	
	
	xmin dup mul ymin dup mul add sqrt		
	xmax dup mul ymin dup mul add sqrt		
	xmin dup mul ymax dup mul add sqrt		
	xmax dup mul ymax dup mul add sqrt		
	max max max								
}bd
/sh3
{	
	/Coords load aload pop 	
	5 index 5 index translate	
	3 -1 roll 6 -1 roll sub		
	3 -1 roll 5 -1 roll sub		
	2 copy dup mul exch dup mul add sqrt
	/dx xs						
	2 copy 0 ne exch 0 ne or
	{
		
		exch atan rotate	
	}{
		pop pop
	}ifelse
	
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	
	/Nsteps xs		
	setupFunEval		
	
	
	
	
	
	dx r2 add r1 lt{
		
		0 
	}{
		dx r1 add r2 le
		{ 
			1
		}{ 
			r1 r2 eq
			{	
				2
			}{ 
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		
	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	
		{	
			0/Function load FunEval sc	
			
			
			
			
			{ 
				{	
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				}
				{	
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	
					
					
				
					
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	
					
				
					r2 r1 gt{	
						
						0 r1
						r1 neg r2 r1 sub div dx mul	
						0	
						shp	
					}{	
						
						
						
						0 r1 calcmaxs	
						dup
						
						r2 add dx mul dx r1 r2 sub sub div
						neg				
						exch 1 index	
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	
		}if
	}if
	
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	
	
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	
		{	
			Nsteps/Function load FunEval sc	
			
			
			
			
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				} 
				{	
					
					
					xmax abs r1 add r1 dx r1 shp
				}	
				{	
			
					r2 r1 gt{
						
						
						
						calcmaxs dup	
						
						r1 add dx mul dx r2 r1 sub sub div	
						exch 1 index	
						exch sub
						dx r2
						shp
					}{	
						
						r1 neg r2 r1 sub div dx mul	
						0		
						dx 		
						r2		
						shp
					}ifelse
				}
			}			
			sh3tp get exec	
		}if
	}if
}bd
/sh		
{	
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	
					2 index sub				
					3 index					
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd
{restore}if not dup{save exch}if
	L3?{	
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if
end
setpacking
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 375 74
%%BeginPageSetup
cg_md begin
bp
sdmtx
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
%%EndPageSetup
0.60000002 i
/Cs1 SC
0.041924432 0.044078849 0.037850846 sc
q
0 74 m
375 74 l
375 0.5 l
0 0.5 l
h
0 74 m
W*
8.5351801 72.1772 m
7.5471559 72.776505 6.3570361 73.085205 4.9580836 73.085205 c
3.4973803 73.085205 2.3072605 72.776505 1.3866018 72.1772 c
0.46706587 71.572235 0 70.780701 0 69.822937 c
0 3.9488461 l
0 3.1132076 0.47829342 2.3544614 1.436003 1.6499923 c
2.386976 0.94439232 3.5591316 0.59272307 4.9580836 0.59272307 c
6.2952843 0.59272307 7.4674401 0.94439232 8.4857788 1.6499923 c
9.4985027 2.347677 10.013847 3.1132076 10.013847 3.9488461 c
10.013847 69.817284 l
10.013847 70.780701 9.5232038 71.559799 8.5351801 72.1772 c
W*
0 0 375 74 rc
-7.5 80.585205 m
17.513847 80.585205 l
17.513847 -6.9072771 l
-7.5 -6.9072771 l
h
f
Q
q
0 74 m
375 74 l
375 0.5 l
0 0.5 l
h
0 74 m
W*
16.787426 37.608456 m
16.186752 37.046463 15.928518 36.19273 16.039671 35.025776 c
16.142963 33.870132 16.677395 32.769894 17.622755 31.731846 c
18.572605 30.687016 19.634731 30.032301 20.84955 29.754131 c
22.046408 29.482746 22.954716 29.630877 23.555389 30.187216 c
28.857037 33.493584 l
28.857037 3.9488461 l
28.857037 3.1132076 29.317366 2.3544614 30.249252 1.6499923 c
31.15756 0.94439232 32.3241 0.59272307 33.723053 0.59272307 c
35.122005 0.59272307 36.33009 0.94439232 37.342815 1.6499923 c
38.361153 2.3544614 38.870884 3.1132076 38.870884 3.9488461 c
38.870884 43.670509 l
38.870884 44.635056 38.373505 45.413025 37.392216 46.012329 c
36.409805 46.624077 35.189373 46.921471 33.723053 46.921471 c
32.262352 46.921471 31.090195 46.624077 30.194237 46.012329 c
16.787426 37.608456 l
W*
0 0 375 74 rc
8.514493 54.421471 m
46.370884 54.421471 l
46.370884 -6.9072771 l
8.514493 -6.9072771 l
h
f
Q
q
0 74 m
375 74 l
375 0.5 l
0 0.5 l
h
0 74 m
W*
56.320732 14.275031 m
56.320732 12.247561 56.879864 10.721023 58.013847 9.6705389 c
59.143337 8.6257076 60.628742 8.1010303 62.450974 8.1010303 c
64.837952 8.1010303 67.120506 9.1141996 69.285179 11.141669 c
71.45771 13.174792 72.537796 15.3176 72.537796 17.605146 c
72.537796 21.115053 l
70.181137 21.115053 l
67.352921 21.115053 65.040047 20.9918 63.248127 20.737377 c
61.456211 20.485216 59.855164 19.816931 58.437126 18.742701 c
57.026947 17.667339 56.320732 16.171331 56.320732 14.275031 c
56.320732 14.275031 l
h
46.319237 13.0391 m
46.319237 18.111731 48.208832 21.63973 51.976795 23.629885 c
55.755989 25.632477 61.223801 26.626423 68.390343 26.626423 c
72.537796 26.626423 l
72.537796 28.382507 l
72.537796 31.2377 71.770958 33.695992 70.230537 35.773216 c
68.691246 37.849308 66.352547 38.881699 63.205463 38.881699 c
60.499626 38.881699 58.118263 38.362679 56.081585 37.317844 c
54.032558 36.274147 52.922157 35.748337 52.731289 35.748337 c
51.663548 35.748337 50.799026 36.274147 50.135479 37.317844 c
49.473053 38.362679 49.147453 39.518322 49.147453 40.784786 c
49.147453 42.428925 50.66991 43.855953 53.726048 45.061356 c
56.768711 46.266754 59.996632 46.866062 63.389595 46.866062 c
69.869011 46.866062 74.660927 45.111107 77.777695 41.594414 c
80.888847 38.072071 82.453964 33.690338 82.453964 28.432262 c
82.453964 4.5911231 l
82.453964 3.694423 81.993637 2.9232385 81.07859 2.2493 c
80.170288 1.5945846 79.017212 1.259877 77.63623 1.259877 c
76.372009 1.259877 75.311005 1.5945846 74.434135 2.2493 c
73.550522 2.9232385 73.108162 3.694423 73.108162 4.5911231 c
73.108162 7.9155846 l
68.893341 2.9707308 64.149704 0.5 58.867142 0.5 c
55.217068 0.5 52.210331 1.5753615 49.853668 3.7373924 c
47.498127 5.8824615 46.319237 8.9909458 46.319237 13.0391 c
46.319237 13.0391 l
h
46.319237 13.0391 m
W*
0 0 375 74 rc
38.819237 54.366062 m
89.953964 54.366062 l
89.953964 -7 l
38.819237 -7 l
h
f
Q
q
0 74 m
375 74 l
375 0.5 l
0 0.5 l
h
0 74 m
W*
91.031815 19.409853 m
91.031815 27.961861 l
91.031815 33.597614 92.66317 38.152355 95.940491 41.637386 c
99.204338 45.122414 104.07597 46.866062 110.55539 46.866062 c
114.64221 46.866062 118.07223 46.154808 120.8387 44.727776 c
123.60629 43.3064 124.99289 41.699577 124.99289 39.932186 c
124.99289 38.850037 124.59431 37.775806 123.81512 36.700447 c
123.02357 35.625084 122.09731 35.081184 121.02956 35.081184 c
120.71632 35.081184 119.59917 35.562893 117.67927 36.508217 c
115.76497 37.45467 113.64184 37.935246 111.31662 37.935246 c
104.39484 37.935246 100.93451 34.598347 100.93451 27.931332 c
100.93451 19.427946 l
100.93451 12.760931 104.42515 9.4240303 111.40868 9.4240303 c
113.79566 9.4240303 115.94237 9.9362688 117.86901 10.949438 c
119.78443 11.963738 120.93076 12.475977 121.31812 12.475977 c
122.56886 12.475977 123.59394 11.963738 124.37987 10.949438 c
125.16467 9.9362688 125.5509 8.8552542 125.5509 7.7244844 c
125.5509 5.9503078 124.10928 4.2993846 121.2137 2.7864153 c
118.32373 1.259877 114.80164 0.5 110.65419 0.5 c
104.10629 0.5 99.204338 2.2232924 95.940491 5.684577 c
92.66317 9.1334229 91.031815 13.713038 91.031815 19.409853 c
W*
0 0 375 74 rc
83.531815 54.366062 m
133.0509 54.366062 l
133.0509 -7 l
83.531815 -7 l
h
f
Q
q
0 74 m
375 74 l
375 0.5 l
0 0.5 l
h
0 74 m
W*
132.82185 4.5911231 m
132.82185 69.85347 l
132.82185 70.80558 133.25749 71.577896 134.14221 72.1772 c
135.0247 72.783295 136.17889 73.085205 137.63286 73.085205 c
139.07448 73.085205 140.28929 72.783295 141.25935 72.1772 c
142.24065 71.577896 142.71893 70.80558 142.71893 69.85347 c
142.71893 27.578531 l
162.44012 45.821232 l
163.00487 46.390007 163.6976 46.680614 164.51384 46.680614 c
165.58159 46.680614 166.65494 46.167248 167.72269 45.154076 c
168.79604 44.140907 169.32484 43.065548 169.32484 41.922337 c
169.32484 41.100269 169.04192 40.401455 168.47717 39.833809 c
156.30426 28.907185 l
171.12238 7.4395308 l
171.49626 6.8707538 171.68712 6.2963233 171.68712 5.7275462 c
171.68712 4.5911231 171.05501 3.4603539 169.7964 2.3544614 c
168.53893 1.2542231 167.31175 0.6911 166.1149 0.6911 c
165.04715 0.6911 164.17029 1.1671538 163.47754 2.1136076 c
149.60928 22.727531 l
142.71893 16.461939 l
142.71893 4.5911231 l
142.71893 3.7634001 142.21594 3.009177 141.20996 2.3047078 c
140.20958 1.6070231 139.01945 1.259877 137.63286 1.259877 c
136.24626 1.259877 135.0988 1.6070231 134.19049 2.3047078 c
133.27657 3.009177 132.82185 3.7634001 132.82185 4.5911231 c
W*
0 0 375 74 rc
125.32185 80.585205 m
179.18712 80.585205 l
179.18712 -6.8088999 l
125.32185 -6.8088999 l
h
f
Q
q
0 74 m
375 74 l
375 0.5 l
0 0.5 l
h
0 74 m
W*
185.26572 27.485807 m
200.92926 27.485807 l
202.31026 27.485807 203.23653 27.671253 203.70921 28.042147 c
204.18863 28.418692 204.41542 29.172915 204.41542 30.292377 c
204.41542 32.78233 203.50711 34.901394 201.68488 36.645039 c
199.85591 38.393208 197.59805 39.26503 194.89221 39.26503 c
192.24812 39.26503 189.98354 38.436176 188.09955 36.786385 c
186.21558 35.129807 185.26572 33.029968 185.26572 30.483477 c
185.26572 27.485807 l
185.26572 27.485807 l
h
175.36191 19.409853 m
175.36191 28.432262 l
175.36191 33.437046 177.28181 37.756584 181.11714 41.403316 c
184.95808 45.043262 189.57822 46.866062 194.9854 46.866062 c
200.13773 46.866062 204.55688 45.215137 208.23727 41.922337 c
211.91991 38.628407 213.7601 34.475094 213.7601 29.445431 c
213.7601 27.505032 213.53893 25.941177 213.09656 24.748215 c
212.66205 23.549601 211.96257 22.721876 211.02396 22.233385 c
210.0786 21.744892 209.19499 21.441847 208.37874 21.306154 c
207.55688 21.189684 206.49477 21.115053 205.16991 21.115053 c
185.26572 21.115053 l
185.26572 18.914577 l
185.26572 15.726938 186.40082 13.192884 188.66429 11.302238 c
190.92776 9.4240303 193.88623 8.4832306 197.53743 8.4832306 c
200.11415 8.4832306 202.54379 9.0904541 204.8387 10.300377 c
207.13922 11.511431 208.53818 12.117523 209.03555 12.117523 c
210.1089 12.117523 211.02396 11.610938 211.77283 10.597769 c
212.53181 9.5834694 212.90681 8.5951767 212.90681 7.6430693 c
212.90681 6.0746922 211.39221 4.4984002 208.37874 2.891577 c
205.36639 1.3028462 201.64783 0.5 197.24887 0.5 c
190.83682 0.5 185.58458 2.2425153 181.49776 5.7275462 c
177.41093 9.2193613 175.36191 13.772969 175.36191 19.409853 c
175.36191 19.409853 l
h
175.36191 19.409853 m
W*
0 0 375 74 rc
167.86191 54.366062 m
221.2601 54.366062 l
221.2601 -7 l
167.86191 -7 l
h
f
Q
q
0 74 m
375 74 l
375 0.5 l
0 0.5 l
h
0 74 m
W*
221.77321 4.5911231 m
221.77321 43.065548 l
221.77321 44.016521 222.22679 44.788837 223.14185 45.388145 c
224.04903 45.99424 225.1976 46.297283 226.59656 46.297283 c
227.84169 46.297283 228.91504 45.99424 229.79192 45.382492 c
230.67665 44.770744 231.11227 43.985992 231.11227 43.028233 c
231.11227 38.801414 l
232.17889 41.038078 233.80577 42.941162 235.97717 44.51067 c
238.14409 46.081306 240.51198 46.866062 243.0887 46.866062 c
246.12013 46.866062 l
247.12051 46.866062 247.99738 46.432976 248.75188 45.56794 c
249.50749 44.7029 249.88809 43.664852 249.88809 42.447014 c
249.88809 41.235962 249.50749 40.173038 248.75188 39.283123 c
247.99738 38.380768 247.12051 37.935246 246.12013 37.935246 c
243.0887 37.935246 l
240.08195 37.935246 237.41879 36.638252 235.12387 34.048794 c
232.82448 31.460461 231.6759 28.109993 231.6759 24.007561 c
231.6759 4.5775537 l
231.6759 3.7566154 231.17403 2.9967384 230.16692 2.3047078 c
229.16766 1.6070231 227.96968 1.259877 226.59656 1.259877 c
225.1976 1.259877 224.04903 1.6070231 223.14185 2.3047078 c
222.22679 3.009177 221.77321 3.7634001 221.77321 4.5911231 c
W*
0 0 375 74 rc
214.27321 54.366062 m
257.38809 54.366062 l
257.38809 -6.2401233 l
214.27321 -6.2401233 l
h
f
Q
q
0 74 m
375 74 l
375 0.5 l
0 0.5 l
h
0 74 m
W*
258.79602 18.680508 m
258.79602 15.466862 259.93787 12.61167 262.23279 10.1285 c
264.52768 7.6362848 267.28293 6.3958306 270.49176 6.3958306 c
273.75674 6.3958306 276.55463 7.6362848 278.88547 10.1285 c
281.21069 12.61167 282.37613 15.466862 282.37613 18.680508 c
282.37613 28.969378 l
282.37613 32.065422 281.19946 34.833546 278.83609 37.292969 c
276.47491 39.746738 273.70059 40.975883 270.49176 40.975883 c
267.28293 40.975883 264.52768 39.746738 262.23279 37.292969 c
259.93787 34.833546 258.79602 32.065422 258.79602 28.969378 c
258.79602 18.680508 l
258.79602 18.680508 l
h
252.6613 18.649977 m
252.6613 28.999908 l
252.6613 33.814724 254.42178 37.979347 257.93826 41.494907 c
261.46594 45.0116 265.65045 46.773338 270.49176 46.773338 c
275.32635 46.773338 279.54791 45.029694 283.13174 41.539009 c
286.71558 38.059631 288.50635 33.881439 288.50635 28.999908 c
288.50635 18.649977 l
288.50635 13.903008 286.70322 9.7078543 283.08795 6.055469 c
279.47382 2.4155231 275.27133 0.59837693 270.49176 0.59837693 c
265.77283 0.59837693 261.61975 2.4155231 258.03592 6.055469 c
254.4521 9.7078543 252.6613 13.903008 252.6613 18.649977 c
252.6613 18.649977 l
h
252.6613 18.649977 m
W*
0 0 375 74 rc
245.1613 54.273338 m
296.00635 54.273338 l
296.00635 -6.9016232 l
245.1613 -6.9016232 l
h
f
Q
q
0 74 m
375 74 l
375 0.5 l
0 0.5 l
h
0 74 m
W*
296.02319 3.7373924 m
296.02319 43.923801 l
296.02319 44.616962 296.30502 45.166515 296.86975 45.580376 c
297.43451 45.99424 298.15756 46.204563 299.04117 46.204563 c
299.79678 46.204563 300.4592 45.976147 301.02396 45.524971 c
301.58868 45.073792 301.87051 44.529892 301.87051 43.887615 c
301.87051 39.456131 l
302.94385 41.51413 304.57635 43.238552 306.77921 44.647491 c
308.97531 46.062084 311.55875 46.773338 314.51047 46.773338 c
319.04529 46.773338 322.97156 45.029694 326.30276 41.539009 c
329.6351 38.059631 331.30463 33.881439 331.30463 28.999908 c
331.30463 3.7373924 l
331.30463 2.9707308 330.99026 2.3657691 330.35928 1.9338154 c
329.72717 1.4882923 329.00299 1.259877 328.18674 1.259877 c
327.43225 1.259877 326.74515 1.4882923 326.11865 1.9338154 c
325.48093 2.3657691 325.17441 2.9662077 325.17441 3.7249539 c
325.17441 28.937716 l
325.17441 32.034893 324.00787 34.821106 321.68265 37.280529 c
319.35181 39.741085 316.5842 40.975883 313.38098 40.975883 c
310.42365 40.975883 307.81662 39.863209 305.55203 37.658207 c
303.28741 35.445293 302.15906 32.534691 302.15906 28.937716 c
302.15906 3.7249539 l
302.15906 3.0951154 301.83347 2.5263386 301.20807 2.0208845 c
300.58157 1.5131693 299.85852 1.259877 299.04117 1.259877 c
298.15756 1.259877 297.43451 1.5131693 296.86975 2.0208845 c
296.30502 2.5263386 296.02319 3.0951154 296.02319 3.7373924 c
W*
0 0 375 74 rc
288.52319 54.273338 m
338.80463 54.273338 l
338.80463 -6.2401233 l
288.52319 -6.2401233 l
h
f
Q
q
0 74 m
375 74 l
375 0.5 l
0 0.5 l
h
0 74 m
W*
344.53293 26.442108 m
363.39969 26.442108 l
365.29041 26.442108 366.54117 26.639992 367.17441 27.053854 c
367.79977 27.455276 368.11304 28.332754 368.11304 29.64897 c
368.11304 32.794769 367.0015 35.562893 364.7616 37.954468 c
362.53519 40.352829 359.7182 41.539009 356.32635 41.539009 c
353.05576 41.539009 350.26907 40.413891 347.97418 38.145569 c
345.68039 35.884029 344.53293 33.171314 344.53293 30.025515 c
344.53293 26.442108 l
344.53293 26.442108 l
h
338.40381 18.649977 m
338.40381 29.284861 l
338.40381 34.043137 340.16992 38.139915 343.67963 41.594414 c
347.20847 45.043262 351.44797 46.773338 356.41843 46.773338 c
361.20358 46.773338 365.33307 45.11676 368.83047 41.829617 c
372.31549 38.523247 374.06476 34.400463 374.06476 29.456738 c
374.06476 27.690477 373.85593 26.2691 373.45172 25.193739 c
373.03406 24.118378 372.37726 23.370939 371.46219 22.919762 c
370.55502 22.475368 369.7197 22.190416 368.97079 22.066031 c
368.21182 21.937122 367.17441 21.874931 365.85516 21.874931 c
344.53293 21.874931 l
344.53293 18.365023 l
344.53293 14.619915 345.87015 11.630161 348.53891 9.3855848 c
351.22119 7.1364846 354.66241 6.0057154 358.87836 6.0057154 c
361.00824 6.0057154 362.88437 6.3200693 364.48654 6.9634771 c
366.08759 7.5876617 367.31476 8.2310696 368.16241 8.8597765 c
369.01459 9.4975309 369.68375 9.8118849 370.19235 9.8118849 c
370.8851 9.8118849 371.49924 9.4783077 372.02695 8.8168077 c
372.56699 8.1507845 372.83759 7.4949384 372.83759 6.8707538 c
372.83759 5.5296617 371.48129 4.1580386 368.77545 2.7310076 c
366.07523 1.3164154 362.70697 0.59837693 358.68188 0.59837693 c
352.71219 0.59837693 347.83383 2.2493 344.06699 5.5850692 c
340.28781 8.9095306 338.40381 13.266385 338.40381 18.649977 c
338.40381 18.649977 l
h
338.40381 18.649977 m
W*
0 0 375 74 rc
330.90381 54.273338 m
381.56476 54.273338 l
381.56476 -6.9016232 l
330.90381 -6.9016232 l
h
f
ep
end
